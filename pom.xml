<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>GitTest.azdoa.gov</groupId>
    <artifactId>GitTest-pom</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Git Testing Project</name>
    <description>Git Testing the Breaz Project</description>

    <modules>
        <module>itesttools</module>
        <module>HelloProject</module>
        <module>StateInterfaces</module>
        <module>StateReports</module>
        <module>BreazTestAutomation</module>
    </modules>    
    <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
    
<scm>
    <connection>scm:git:https://github.com/thaberly/GitTest/</connection>
</scm>
    
    <build>
      <pluginManagement>
        <plugins>
            <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                  <executions>
                    <execution>
                        <phase>install</phase>
                        <id>prepare-deploy-package</id>
                        <configuration>
                          <target>
                            <echo>**************Project Paths and Information*******************************</echo>
                            <echo>project.build.directory = ${project.build.directory}</echo>
                            <echo>project.artifactId = ${project.artifactId} project.version = ${project.version}</echo>
                            <echo>project.basedir = ${project.basedir} project.baseUri = ${project.baseUri}</echo>
                            <echo>maven.build.timestamp =${maven.build.timestamp}</echo>
                            <echo>project.build.sourceDirectory = ${project.build.sourceDirectory}</echo>
                            <echo>project.build.outputDirectory = ${project.build.outputDirectory}</echo>
                            <echo>**************************************************************************</echo>
                            <property name="timestamp" value="${maven.build.timestamp}"/> <!--In case the time changes during copies -->
                            <echo>Copy files to a folder for staging deployment</echo>
                            <!--This copy todir should actually be going to a fileserver or a share folder -->
                              <copy todir="/var/lib/jenkins/archive/Interfaces/${project.artifactId}-${project.version}-${timestamp}">
                                <fileset dir="${project.basedir}/StateInterfaces/Trunk">
                                  <include name="**/**/*.xml"/>
                                </fileset>
                              </copy>
                              <copy todir="/var/lib/jenkins/archive/Interfaces/${project.artifactId}-${project.version}-${timestamp}">
                                <fileset dir="${project.basedir}/itesttools/target">
                                  <include name="*.war"/>
                                </fileset>
                                <mapper type="flatten"/>
                              </copy>
                          </target>
                        </configuration>
                            <goals>
                              <goal>run</goal>
                            </goals>
                    </execution>
                  </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.1</version>
            </plugin>
            <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.8.1</version>
                    <configuration>
                        <tag>${project.artifactId}-${project.version}</tag>
                    </configuration>
            </plugin>
        </plugins>
      </pluginManagement>
    </build>


  
<!-- Example for dependency management
Some plugins like gmaven plugin require other dependencies 
declared and ideally you want to keep all the versions of the plugin and the 
dependencies in sync. You can use properties and the dependencyManagement section for that:

    <properties>
        <gmaven.version>1.0</gmaven.version>
        <maven.version>2.2.1</maven.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-mojo</artifactId>
                <version>${gmaven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy.maven.runtime</groupId>
                <artifactId>gmaven-runtime-1.6</artifactId>
                <version>${gmaven.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
 -->

</project>